<?php

namespace Opifer\CmsBundle\Repository;

use Gedmo\Tree\Entity\Repository\NestedTreeRepository;

/**
 * MenuRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MenuRepository extends NestedTreeRepository
{
    /**
     * Get children, ordered by the sort property.
     *
     * @return \Doctrine\Common\Collections\ArrayCollection
     */
    public function getSortedChildren()
    {
        return $this->childrenQueryBuilder()
            ->orderBy('node.sort', 'DESC')
            ->getQuery()
            ->getResult();
    }

    /**
     * Get children, ordered by the sort property and filter by name.
     *
     * @return \Doctrine\Common\Collections\ArrayCollection
     */
    public function getSortedChildrenByName($name = '')
    {
        return $this->getChildrenBy('name', $name);
    }

    /**
     * Get children, ordered by the sort property and filter by id.
     *
     * @return \Doctrine\Common\Collections\ArrayCollection
     */
    public function getSortedChildrenById($id = '')
    {
        return $this->getChildrenBy('id', $id);
    }

    /**
     * Get children as array.
     *
     * @param string $property
     * @param string $value
     *
     * @return \Doctrine\Common\Collections\ArrayCollection
     */
    private function getChildrenBy($property, $value)
    {
        $qb = $this->childrenQueryBuilder();

        if ($value) {
            $qb->where('node.'.$property.' = :'.$property);
            $qb->setParameter($property, $value);
        }

        $result = $qb->getQuery()->getResult();

        if ($result && $result[0]->hasChildren()) {
            return $result[0]->getChildren();
        }

        return $result;
    }
}
